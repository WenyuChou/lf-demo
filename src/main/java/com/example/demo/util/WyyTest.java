package com.example.demo.util;

import java.util.*;

/**
 * @ClassName WyyTest
 * @Description TODO
 * @Author wuyy
 * @Date 2022/10/24 下午1:58
 */
public class WyyTest {

    public static void main(String[] args) {
        // 当前有问题列表
        List<String> list = Arrays.asList("001004005001002002"
               );
        // 可以修改列表
        Map<String,String> map1 = new HashMap<>();
        map1.put("001003008001007",	"001003020001007");
        map1.put("001003015001007",	"001003013003007");
        map1.put("001003027001006",	"001003020001007");
        map1.put("001004005001002001",	"001004013001002001001");
        map1.put("001004005001002003",	"001004013001002001003");
        map1.put("001004005001002004",	"001004013001002001004");
        map1.put("001004005001002005",	"001004013001002001005");
        map1.put("001004005001002008",	"001004013001002001008");
        map1.put("001004005002002001001",	"001004013005002003001001");
        map1.put("001004005002002001002",	"001004013005002003001002");
        map1.put("001004005002002002",	"001004013005002003002");
        map1.put("001004005002002003",	"001004013005002003003");
        map1.put("001004005002002004",	"001004013005002003004");
        map1.put("001004006001002001",	"001004013002002001001");
        map1.put("001004006001002002002",	"001004013002002001002002");
        map1.put("001004006001002003",	"001004013002002001003");
        map1.put("001004006001002004",	"001004013002002001004");
        map1.put("001004006001002006",	"001004013002002001005");
        map1.put("001004006001002007",	"001004013002002001006");
        map1.put("001004006001002011",	"001004013002002001009");
        map1.put("001004007001002001",	"001004013005002002001");
        map1.put("001004007002002001",	"001004013003002001001");
        map1.put("001004007002002002",	"001004013003002001002");
        map1.put("001004007002002003",	"001004013003002001003");
        map1.put("001004007002002004",	"001004013003002001004");
        map1.put("001004007004002001",	"001004013004002001001");
        map1.put("001004010001002001",	"001004009004002001");
        map1.put("001004011002001001",	"001004002002001001");
        map1.put("001005001010",	"001006001003");
        map1.put("001010002026004001",	"001010002101003001");
        map1.put("001010020020001002",	"001010020017004001");
        map1.put("001010031033001002",	"001010016033001001");
        map1.put("001010037010001002",	"001010037010001010");
        map1.put("001010037010002002",	"001010037010002010");
        map1.put("001010037012002002",	"001010037010024002");
        map1.put("001010037012003002",	"001010037010025002");
        map1.put("001010037013004002",	"001010037013004010");
        map1.put("001010037014001002",	"001010037014001010");
        map1.put("001010037014003002",	"001010037014003010");
        map1.put("001010037015001002",	"001010037014013002");
        map1.put("001010037022001002",	"001010037010020002");
        map1.put("001010037022002002",	"001010037010022002");
        map1.put("001010037022003002",	"001010037010019002");
        map1.put("001010037024001002",	"001010037027031002");
        map1.put("001010037025004002",	"001010037027007002");
        map1.put("001010037026001002",	"001010037027008002");
        map1.put("001010037026003002",	"001010037027010002");
        map1.put("001010037026005002",	"001010037027012002");
        map1.put("001010037026006002",	"001010037027013002");
        map1.put("001010037031005002",	"001010037027018002");
        map1.put("001010043018007002",	"001010043034002002");
        map1.put("001010045013001001",	"001010022036001001 ");
        map1.put("001010045020002001",	"001010033067002001");
        map1.put("001010083001008001002",	"001010037010035002");
        map1.put("001010083001009001002",	"001010037010037002");
        map1.put("001010083001009003002",	"001010037010034002");
        map1.put("001010083001010003002",	"001010037010042002");
        map1.put("001010083001010007002",	"001010037010038002");
        map1.put("001010083003001002002",	"001010037014009002");
        map1.put("001010084001001002",	"001010037010032002");
        map1.put("001010084001002002",	"001010037010031002");
        map1.put("001010084001003002",	"001010037010030002");
        map1.put("001010084001004002",	"001010037010029002");
        map1.put("001010085001001001",	"001010037027021002");
        map1.put("001010085003002001",	"001010037027028002");
        map1.put("001012013003026001007",	"001012013003102043");
        map1.put("001012004004012001004",	"001012004004031001004");
        map1.put("001012005003008",	"001012005003008005099");
        map1.put("001012004004015001",	"001012004004015001099");
        map1.put("001012004004018001",	"001012004004018001099");
        map1.put("001012013003101",	"001012013003101999");
        map1.put("001012002003001001","001012002003021001002");
        map1.put("1012002003021000","001012002003021002001");
        map1.put("001010020007001004","001010020026005001");
        map1.put("001010020016002002","001010020040001001");
        map1.put("001010020016003002","001010020040006001");
        map1.put("001010020016004002","001010020040003001");
        map1.put("001010020027001003","001010020034001003");
        map1.put("001010020028001003","001010020038002004");
        map1.put("001010042020001001","001010099028001001");
        map1.put("001010042021019002","001010099007005002");
        map1.put("001010042021026002","001010099008007002");
        map1.put("001010042021015002","001010099008006001");
        map1.put("001010042021016002","001010099007002002");
        map1.put("001010042021018002","001010099007004002");
        map1.put("001010042021034002","001010099008015002");
        map1.put("001010042021036002","001010099008017002");
        map1.put("001010052012001001","001010013023003002");
        map1.put("001010052012003001","001010013023002002");
        map1.put("001010052013001001","001010013022002002");
        map1.put("001010002067002001","001010002109001001");
        map1.put("001010009029001001","001010009053001001");
        map1.put("001010013011001001","001010013011003001");
        map1.put("001010016014002001","001010016019001001");
        map1.put("001010042021035002","001010099008016002");
        map1.put("001012013003011003003","001012013003011099");
        map1.put("001012013003026001003","001012013003102004");
        map1.put("001001036",	"001001033004");

        Map<String,String> map2 = new HashMap<>();
        map2.put("001010085003004001",	"001010037027030002");
        map2.put("001010083003001004002",	"001010037014011002");
        map2.put("001010083002001003002",	"001010037032004002");
        map2.put("001010083001010006002",	"001010037010044002");
        map2.put("001010083001010004002",	"001010037010043002");
        map2.put("001010042021030002",	"001010099008011002");
        map2.put("001010042021027002",	"001010099008008002");
        map2.put("001010042021017002",	"001010099007003002");
        map2.put("001010037031006002",	"001010037027019002");
        map2.put("001010037031004002",	"001010037027017002");
        map2.put("001010037027006002",	"001010037027006009");
        map2.put("001010037027004002",	"001010037027004010");
        map2.put("001010037022004002",	"001010037010021002");
        map2.put("001010037013003002",	"001010037013003010");
        map2.put("001010037013002002",	"001010037013002010");
        map2.put("001010037011003002",	"001010037013018002");
        map2.put("001004013005002003004",	"001004013001003003004");
        map2.put("001004013005002003003",	"001004013001003003003");
        map2.put("001004013005002003002",	"001004013001003003002");
        map2.put("001004013005002003001002",	"001004013001003003001002");
        map2.put("001004013005002003001001",	"001004013001003003001001");
        map2.put("001004013005002002001",	"001004013001003002001");


        Map<String,String> map3 = new HashMap<>();
        map3.put("001012005003012005003",	"001012005005005005");
        map3.put("001012005003013004001",	"001012005005005005");
        map3.put("001012005003007010008",	"001012005003013004005");
        map3.put("001012005003012005003",	"001012005005005005");
        map3.put("001012005003013004001",	"001012005005005005");
        map3.put("00101200400401501010",	"001012004004015004005");

        Map<String,String> map4 = new HashMap<>();
        map4.put("001010002077003002",	"001010002077003018001");
        map4.put("001010013011001003",	"001010013011003003");
        map4.put("001010016014002003",	"001010016019001003");
        map4.put("001010020007001002",	"001010020026005002");
        map4.put("001010020015003001",	"001010020040008002");
        map4.put("001010020016001001",	"001010020040002002");
        map4.put("001010020016002001",	"001010020040001002");
        map4.put("001010020016004001",	"001010020040003002");
        map4.put("001010020020001001",	"001010020017004002");
        map4.put("001010020028002001",	"001010020038003002");
        map4.put("001010037010003002",	"001010037010003010");
        map4.put("001010037012001002",	"001010037010023002");
        map4.put("001010037026004002",	"001010037027011002");
        map4.put("001010037031007002",	"001010037027020002");
        map4.put("001010042020001003",	"001010099028001009");
        map4.put("001010052012001003",	"001010013023003001");
        map4.put("001010052013001003",	"001010013022002001");
        map4.put("001010052013002001",	"001010013022003002");
        map4.put("001010052013002003",	"001010013022003001");
        map4.put("001010083001010002002",	"001010037010039002");
        map4.put("001010083003001003002","001010037014010002");
        map4.put("001010085002002001",	"001010037027026002");
        map4.put("001012011003012001008",	"001012011003006005010");
        map4.put("001012013003023001007",	"001012013003101025");
        map4.put("001012013003026001005",	"001012013003102041");
        map4.put("001005017003001",	"001005013007002001");
        map4.put("001004005001002002","001004013001002001002");



        for(String errorCode : list){
            String value1 = map1.get(errorCode);
            String value2 = map2.get(errorCode);
            String value3 = map3.get(errorCode);
            String value4 = map4.get(errorCode);
            if(Objects.nonNull(value1)){
                if(Objects.nonNull(map2.get(value1))){
                    System.out.println("select concat(\"{\\\"optType\\\":\\\"7\\\",\\\"data\\\":{\\\"id\\\":\\\"\",t1.id,\"\\\",\\\"pYsftbm\\\":\\\"\",\"" + map2.get(value1) + "\",\"\\\"}}\")  from t_grant_budget_prehandle t left join t_grant_budget_expense t1 on t.id = t1.budget_prehandle_id where t.status = 0 and t1.p_ysftbm = '" + errorCode + "' order by t1.id asc;");
                }else{
                    System.out.println("select concat(\"{\\\"optType\\\":\\\"7\\\",\\\"data\\\":{\\\"id\\\":\\\"\",t1.id,\"\\\",\\\"pYsftbm\\\":\\\"\",\"" + map1.get(errorCode) + "\",\"\\\"}}\")  from t_grant_budget_prehandle t left join t_grant_budget_expense t1 on t.id = t1.budget_prehandle_id where t.status = 0 and t1.p_ysftbm = '" + errorCode + "' order by t1.id asc;");
                }
            }
            if(Objects.nonNull(value2)){
                System.out.println("select concat(\"{\\\"optType\\\":\\\"7\\\",\\\"data\\\":{\\\"id\\\":\\\"\",t1.id,\"\\\",\\\"pYsftbm\\\":\\\"\",\"" + map2.get(errorCode) + "\",\"\\\"}}\")  from t_grant_budget_prehandle t left join t_grant_budget_expense t1 on t.id = t1.budget_prehandle_id where t.status = 0 and t1.p_ysftbm = '" + errorCode + "' order by t1.id asc;");
            }
            if(Objects.nonNull(value3)){
                System.out.println("select concat(\"{\\\"optType\\\":\\\"7\\\",\\\"data\\\":{\\\"id\\\":\\\"\",t1.id,\"\\\",\\\"pYsftbm\\\":\\\"\",\"" + map3.get(errorCode) + "\",\"\\\"}}\")  from t_grant_budget_prehandle t left join t_grant_budget_expense t1 on t.id = t1.budget_prehandle_id where t.status = 0 and t1.p_ysftbm = '" + errorCode + "' order by t1.id asc;");
            }
            if(Objects.nonNull(value4)){
                 System.out.println("select concat(\"{\\\"optType\\\":\\\"7\\\",\\\"data\\\":{\\\"id\\\":\\\"\",t1.id,\"\\\",\\\"pYsftbm\\\":\\\"\",\"" + map4.get(errorCode) + "\",\"\\\"}}\")  from t_grant_budget_prehandle t left join t_grant_budget_expense t1 on t.id = t1.budget_prehandle_id where t.status = 0 and t1.p_ysftbm = '" + errorCode + "' order by t1.id asc;");
            }
        }

    }
}
