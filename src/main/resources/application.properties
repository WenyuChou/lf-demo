server.port=9990

# mybatis-plus 配置
mybatis-plus.mapper-locations=classpath*:/mapper/*.xml
mybatis-plus.type-aliases-package=com.example.demo.pojo
mybatis-plus.configuration.map-underscore-to-camel-case=true


spring.shardingsphere.datasource.names=db1,db2
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url=jdbc:mysql://10.231.128.148:3306/db1?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=123456aA!
spring.shardingsphere.props.sql.show=true


#声明 表存放在对应的数据库 $->{0..1} 就是行内表达式
#这里的意思是db1库内有user虚拟表指向 user_1和user_2
spring.shardingsphere.sharding.tables.user.actual-data-nodes=db$->{1..2}.user_$->{0..3}
#声明根据哪个字段进行分片
spring.shardingsphere.sharding.tables.user.database-strategy.standard.sharding-column=user_id
#自定义分片规则类
spring.shardingsphere.sharding.tables.user.database-strategy.standard.precise-algorithm-class-name=com.example.demo.config.UserTableShardingAlgorithm


logging.level.root = info
